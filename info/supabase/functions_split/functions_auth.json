{
  "schema_name": "auth",
  "function_count": 4,
  "functions": [
    {
      "schema_name": "auth",
      "function_name": "email",
      "arguments": "",
      "return_type": "text",
      "function_type": "Function",
      "function_definition": "CREATE OR REPLACE FUNCTION auth.email()\n RETURNS text\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n  coalesce(\n    nullif(current_setting('request.jwt.claim.email', true), ''),\n    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'email')\n  )::text\n$function$\n"
    },
    {
      "schema_name": "auth",
      "function_name": "jwt",
      "arguments": "",
      "return_type": "jsonb",
      "function_type": "Function",
      "function_definition": "CREATE OR REPLACE FUNCTION auth.jwt()\n RETURNS jsonb\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n    coalesce(\n        nullif(current_setting('request.jwt.claim', true), ''),\n        nullif(current_setting('request.jwt.claims', true), '')\n    )::jsonb\n$function$\n"
    },
    {
      "schema_name": "auth",
      "function_name": "role",
      "arguments": "",
      "return_type": "text",
      "function_type": "Function",
      "function_definition": "CREATE OR REPLACE FUNCTION auth.role()\n RETURNS text\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n  coalesce(\n    nullif(current_setting('request.jwt.claim.role', true), ''),\n    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'role')\n  )::text\n$function$\n"
    },
    {
      "schema_name": "auth",
      "function_name": "uid",
      "arguments": "",
      "return_type": "uuid",
      "function_type": "Function",
      "function_definition": "CREATE OR REPLACE FUNCTION auth.uid()\n RETURNS uuid\n LANGUAGE sql\n STABLE\nAS $function$\n  select \n  coalesce(\n    nullif(current_setting('request.jwt.claim.sub', true), ''),\n    (nullif(current_setting('request.jwt.claims', true), '')::jsonb ->> 'sub')\n  )::uuid\n$function$\n"
    }
  ]
}